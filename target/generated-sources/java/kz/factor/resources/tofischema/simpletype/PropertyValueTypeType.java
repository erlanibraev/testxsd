//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.07.05 at 04:56:54 PM ALMT 
//


package kz.factor.resources.tofischema.simpletype;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PropertyValueTypeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PropertyValueTypeType">
 *   &lt;restriction base="{http://www.factor.kz/resources/TOFISchema/simpletype}CodeType">
 *     &lt;enumeration value="_ValueofMask"/>
 *     &lt;enumeration value="_Boolean"/>
 *     &lt;enumeration value="_URI"/>
 *     &lt;enumeration value="_Date"/>
 *     &lt;enumeration value="_Time"/>
 *     &lt;enumeration value="_DateTime"/>
 *     &lt;enumeration value="_String"/>
 *     &lt;enumeration value="_MultiLine_text"/>
 *     &lt;enumeration value="_File"/>
 *     &lt;enumeration value="_XML_file"/>
 *     &lt;enumeration value="_Image"/>
 *     &lt;enumeration value="_Audio_file"/>
 *     &lt;enumeration value="_Video_file"/>
 *     &lt;enumeration value="_Complex_property"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PropertyValueTypeType")
@XmlEnum
public enum PropertyValueTypeType {

    @XmlEnumValue("_ValueofMask")
    VALUEOF_MASK("_ValueofMask"),

    /**
     * Логическая константа.
     * 
     */
    @XmlEnumValue("_Boolean")
    BOOLEAN("_Boolean"),

    /**
     * URI адрес.
     * 
     */
    @XmlEnumValue("_URI")
    URI("_URI"),
    @XmlEnumValue("_Date")
    DATE("_Date"),
    @XmlEnumValue("_Time")
    TIME("_Time"),
    @XmlEnumValue("_DateTime")
    DATE_TIME("_DateTime"),
    @XmlEnumValue("_String")
    STRING("_String"),
    @XmlEnumValue("_MultiLine_text")
    MULTI_LINE_TEXT("_MultiLine_text"),
    @XmlEnumValue("_File")
    FILE("_File"),
    @XmlEnumValue("_XML_file")
    XML_FILE("_XML_file"),
    @XmlEnumValue("_Image")
    IMAGE("_Image"),
    @XmlEnumValue("_Audio_file")
    AUDIO_FILE("_Audio_file"),
    @XmlEnumValue("_Video_file")
    VIDEO_FILE("_Video_file"),
    @XmlEnumValue("_Complex_property")
    COMPLEX_PROPERTY("_Complex_property");
    private final String value;

    PropertyValueTypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PropertyValueTypeType fromValue(String v) {
        for (PropertyValueTypeType c: PropertyValueTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
